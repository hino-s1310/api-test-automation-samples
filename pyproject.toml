[project]
name = "api-test-automation-samples"
version = "0.1.0"
description = "PDFをMarkdown形式に変換するAPIのテスト自動化サンプル"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
keywords = ["pdf", "markdown", "api", "fastapi", "testing"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",

    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # FastAPI関連
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    
    # PDF変換関連
    "markitdown>=0.1.0",
    "pypdf>=4.0.0",
    "pdfplumber>=0.10.3",
    
    # ファイル処理関連
    "python-magic>=0.4.27",
    "aiofiles>=23.2.1",
    "Pillow>=10.1.0",
    
    # その他
    "python-dateutil>=2.8.2",
    "pydantic>=2.5.0",
]

[project.optional-dependencies]
dev = [
    # テスト関連
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "httpx>=0.25.2",
    "pytest-cov>=4.1.0",
    
    # 開発・デバッグ関連
    "python-dotenv>=1.0.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
]

test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "httpx>=0.25.2",
    "pytest-cov>=4.1.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/api-test-automation-samples"
Repository = "https://github.com/yourusername/api-test-automation-samples.git"
Issues = "https://github.com/yourusername/api-test-automation-samples/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "httpx>=0.25.2",
    "pytest-cov>=4.1.0",
    "python-dotenv>=1.0.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
